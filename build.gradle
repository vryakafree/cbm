plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}

repositories {
	// Fabric repositories first
	maven {
		name = "Fabric"
		url = "https://maven.fabricmc.net/"
	}
	mavenCentral()
	maven {
		name = "ParchmentMC"
		url = "https://maven.parchmentmc.org/"
	}
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}
	maven {
		name = "architectury"
		url = "https://maven.architectury.dev/"
	}
	// TerraformersMC repository for ModMenu
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
	// Shedaniel for Cloth Config
	maven {
		name = "Shedaniel"
		url = "https://maven.shedaniel.me/"
	}
	// Cobblemon repository
	maven {
		name = "ImpactDev Nexus"
		url = "https://nexus.impactdev.net/repository/public/"
	}
	maven {
		name = "Cobblemon Development"
		url = "https://maven.impactdev.net/repository/development/"
	}
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}



loom {
    splitEnvironmentSourceSets()

	mods {
		"customcobblemonmusicmod" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
	// Cobblemon - enabled for full functionality
	modImplementation "com.cobblemon:fabric:${project.cobblemon_version}"
	
	// Kotlin dependency for Cobblemon
	implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.0"
	
	// ModMenu integration (optional)
	modCompileOnly "com.terraformersmc:modmenu:11.0.1"
	
	// Cloth Config for configuration GUI (optional)
	modCompileOnly "me.shedaniel.cloth:cloth-config-fabric:15.0.127"
	
	// Uncomment the following line to enable the deprecated Fabric API modules. 
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		maven(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// resolving dependencies.
	}
}